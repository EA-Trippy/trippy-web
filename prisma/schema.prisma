// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(auto()) @map("_id") @db.ObjectId
  provider String
  sub String?

  email String
  username String?
  blogname String?
  image String? 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hasNotification Boolean?

  posts Post[]
  comments Comment[]
  notifications Notification[]
}

model Post {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  body String
  startDate String
  endDate String
  thumbnail String?
  people Int
  tag String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  likedIds String[] @db.ObjectId
  bookmarkedIds String[] @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[]
  notifications Notification[]
}

model Comment {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId String @db.ObjectId
  postId String @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Notification {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createdAt DateTime @default(now())
  receiver String @db.ObjectId
  sender String @db.ObjectId
  postId String @db.ObjectId
  isRead Boolean

  user User @relation(fields: [receiver], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

